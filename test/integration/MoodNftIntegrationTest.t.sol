// SPDX-License-Identifier: MIT
pragma solidity ^0.8.18;

import {Test, console} from "forge-std/Test.sol";
import {MoodNft} from "../../src/MoodNft.sol";
import {DeployMoodNft} from "../../script/DeployMoodNft.s.sol";

contract MoodNftIntegrationTest is Test {
    string constant NFT_NAME = "Mood NFT";
    string constant NFT_SYMBOL = "MN";
    MoodNft moodNft;
    DeployMoodNft deployer;

    string constant HAPPY_MOOD_URI =
        "data:application/json;base64,eyJuYW1lIjogIk1vb2QgTkZUIiwgImRlc2NyaXB0aW9uIjogIkFuIE5GVCB0aGF0IHJlZmxlY3RzIHRoZSBvd25lcnMgbW9vZC4iLCAiYXR0cmlidXRlcyI6IFt7InRyYWl0X3R5cGUiOiAibW9vZG5lc3MiLCAidmFsdWUiOiAxMDB9XSwgImltYWdlIjogImRhdGE6aW1hZ2Uvc3ZnK3htbDtiYXNlNjQsUEhOMlp5QjJhV1YzUW05NFBTSXdJREFnTWpBd0lESXdNQ0lnZDJsa2RHZzlJalF3TUNJZ0lHaGxhV2RvZEQwaU5EQXdJaUI0Yld4dWN6MGlhSFIwY0RvdkwzZDNkeTUzTXk1dmNtY3ZNakF3TUM5emRtY2lQZ29nSUNBZ1BHTnBjbU5zWlNCamVEMGlNVEF3SWlCamVUMGlNVEF3SWlCbWFXeHNQU0o1Wld4c2IzY2lJSEk5SWpjNElpQnpkSEp2YTJVOUltSnNZV05ySWlCemRISnZhMlV0ZDJsa2RHZzlJak1pTHo0S0lDQWdJRHhuSUdOc1lYTnpQU0psZVdWeklqNEtJQ0FnSUNBZ0lDQThZMmx5WTJ4bElHTjRQU0kyTVNJZ1kzazlJamd5SWlCeVBTSXhNaUl2UGdvZ0lDQWdJQ0FnSUR4amFYSmpiR1VnWTNnOUlqRXlOeUlnWTNrOUlqZ3lJaUJ5UFNJeE1pSXZQZ29nSUNBZ1BDOW5QZ29nSUNBZ1BIQmhkR2dnWkQwaWJURXpOaTQ0TVNBeE1UWXVOVE5qTGpZNUlESTJMakUzTFRZMExqRXhJRFF5TFRneExqVXlMUzQzTXlJZ2MzUjViR1U5SW1acGJHdzZibTl1WlRzZ2MzUnliMnRsT2lCaWJHRmphenNnYzNSeWIydGxMWGRwWkhSb09pQXpPeUl2UGdvOEwzTjJaejRLIn0=";
    string constant SAD_MOOD_URI =
        "data:application/json;base64,eyJuYW1lIjogIk1vb2QgTkZUIiwgImRlc2NyaXB0aW9uIjogIkFuIE5GVCB0aGF0IHJlZmxlY3RzIHRoZSBvd25lcnMgbW9vZC4iLCAiYXR0cmlidXRlcyI6IFt7InRyYWl0X3R5cGUiOiAibW9vZG5lc3MiLCAidmFsdWUiOiAxMDB9XSwgImltYWdlIjogImRhdGE6aW1hZ2Uvc3ZnK3htbDtiYXNlNjQsUEhOMlp5QjNhV1IwYUQwaU1UQXlOSEI0SWlCb1pXbG5hSFE5SWpFd01qUndlQ0lnZG1sbGQwSnZlRDBpTUNBd0lERXdNalFnTVRBeU5DSWdlRzFzYm5NOUltaDBkSEE2THk5M2QzY3Vkek11YjNKbkx6SXdNREF2YzNabklqNEtJQ0FnSUR4d1lYUm9JR1pwYkd3OUlpTXpNek1pSUdROUlrMDFNVElnTmpSRE1qWTBMallnTmpRZ05qUWdNalkwTGpZZ05qUWdOVEV5Y3pJd01DNDJJRFEwT0NBME5EZ2dORFE0SURRME9DMHlNREF1TmlBME5EZ3RORFE0VXpjMU9TNDBJRFkwSURVeE1pQTJOSHB0TUNBNE1qQmpMVEl3TlM0MElEQXRNemN5TFRFMk5pNDJMVE0zTWkwek56SnpNVFkyTGpZdE16Y3lJRE0zTWkwek56SWdNemN5SURFMk5pNDJJRE0zTWlBek56SXRNVFkyTGpZZ016Y3lMVE0zTWlBek56SjZJaTgrQ2lBZ0lDQThjR0YwYUNCbWFXeHNQU0lqUlRaRk5rVTJJaUJrUFNKTk5URXlJREUwTUdNdE1qQTFMalFnTUMwek56SWdNVFkyTGpZdE16Y3lJRE0zTW5NeE5qWXVOaUF6TnpJZ016Y3lJRE0zTWlBek56SXRNVFkyTGpZZ016Y3lMVE0zTWkweE5qWXVOaTB6TnpJdE16Y3lMVE0zTW5wTk1qZzRJRFF5TVdFME9DNHdNU0EwT0M0d01TQXdJREFnTVNBNU5pQXdJRFE0TGpBeElEUTRMakF4SURBZ01DQXhMVGsySURCNmJUTTNOaUF5TnpKb0xUUTRMakZqTFRRdU1pQXdMVGN1T0MwekxqSXRPQzR4TFRjdU5FTTJNRFFnTmpNMkxqRWdOVFl5TGpVZ05UazNJRFV4TWlBMU9UZHpMVGt5TGpFZ016a3VNUzA1TlM0NElEZzRMalpqTFM0eklEUXVNaTB6TGprZ055NDBMVGd1TVNBM0xqUklNell3WVRnZ09DQXdJREFnTVMwNExUZ3VOR00wTGpRdE9EUXVNeUEzTkM0MUxURTFNUzQySURFMk1DMHhOVEV1Tm5NeE5UVXVOaUEyTnk0eklERTJNQ0F4TlRFdU5tRTRJRGdnTUNBd0lERXRPQ0E0TGpSNmJUSTBMVEl5TkdFME9DNHdNU0EwT0M0d01TQXdJREFnTVNBd0xUazJJRFE0TGpBeElEUTRMakF4SURBZ01DQXhJREFnT1RaNklpOCtDaUFnSUNBOGNHRjBhQ0JtYVd4c1BTSWpNek16SWlCa1BTSk5Namc0SURReU1XRTBPQ0EwT0NBd0lERWdNQ0E1TmlBd0lEUTRJRFE0SURBZ01TQXdMVGsySURCNmJUSXlOQ0F4TVRKakxUZzFMalVnTUMweE5UVXVOaUEyTnk0ekxURTJNQ0F4TlRFdU5tRTRJRGdnTUNBd0lEQWdPQ0E0TGpSb05EZ3VNV00wTGpJZ01DQTNMamd0TXk0eUlEZ3VNUzAzTGpRZ015NDNMVFE1TGpVZ05EVXVNeTA0T0M0MklEazFMamd0T0RndU5uTTVNaUF6T1M0eElEazFMamdnT0RndU5tTXVNeUEwTGpJZ015NDVJRGN1TkNBNExqRWdOeTQwU0RZMk5HRTRJRGdnTUNBd0lEQWdPQzA0TGpSRE5qWTNMallnTmpBd0xqTWdOVGszTGpVZ05UTXpJRFV4TWlBMU16TjZiVEV5T0MweE1USmhORGdnTkRnZ01DQXhJREFnT1RZZ01DQTBPQ0EwT0NBd0lERWdNQzA1TmlBd2VpSXZQZ284TDNOMlp6NEsifQ==";

    address USER = makeAddr("user");

    function setUp() public {
        deployer = new DeployMoodNft();
        moodNft = deployer.run();
    }

    function testViewTokenURIIntegration() public {
        vm.prank(USER);
        moodNft.mintNft();
        console.log(moodNft.tokenURI(0));
    }

    function testFlipTokenToSad() public {
        vm.prank(USER);
        moodNft.mintNft();

        vm.prank(USER);
        moodNft.flipMood(0);

        console.log(moodNft.tokenURI(0));

        assertEq(keccak256(abi.encodePacked(moodNft.tokenURI(0))), keccak256(abi.encodePacked(SAD_MOOD_URI)));
    }
}
